<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sField</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>_location</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
event_inherited();
description = "A field where crops are grown.";
for(var i = 0; i &lt; sprite_height / 32 - 2; i++) {
    for(var j = 0; j &lt; sprite_width / 32 - 2; j++) {
        hayMap[i, j] = true;
    }
}
targetHeight = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Determine targetHeight
if(targetHeight == 1) {
    targetHeight = 0;
    for(var i = 0; i &lt; array_height_2d(hayMap); i++) {
        for(var j = 0; j &lt; array_length_2d(hayMap, i); j++) {
            if(hayMap[i, j] == 1) {
                targetHeight = 1;
                break;
            }
        }
    }
} else if(targetHeight &lt;= 1) {
    targetHeight += 1/4;
    for(var i = 0; i &lt; array_height_2d(hayMap); i++) {
        for(var j = 0; j &lt; array_length_2d(hayMap, i); j++) {
            if(hayMap[i, j] == targetHeight - 1/4) {
                targetHeight -= 1/4;
                break;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw hay on top where it is growing
draw_self();
for(var i = 0; i &lt; array_height_2d(hayMap); i++) {
    for(var j = 0; j &lt; array_length_2d(hayMap, i); j++) {
        var ind = 0;
        if(hayMap[i, j] = 1/4) {
            draw_sprite(sSeed, ind, x + 32 + 32 * j, y + 32 + 32 * i);
        } else if(hayMap[i, j] != 0) {
            var spr = sHay;
            if(hayMap[i, j] == 2/4) {
                spr = sSprout;
            } else if(hayMap[i, j] == 3/4) {
                spr = sGrowing;
            }
            if(j == 0 || hayMap[i, j - 1] == 0) {
                ind += 1;
            }
            if(j == array_length_2d(hayMap, i) - 1 || hayMap[i, j + 1] == 0) {
                ind += 2;
            }
            if(i == array_height_2d(hayMap) - 1 || hayMap[i + 1, j] == 0) {
                ind += 4;
            }
            if(i == 0 || hayMap[i - 1, j] == 0) {
                draw_sprite(spr, (ind % 4) + 8, x + 32 + 32 * j, y + 32 * i);
            }
            if(ind &lt; 3 &amp;&amp; ind != 2) {
                if(j &gt; 0 &amp;&amp; i &lt; array_height_2d(hayMap) - 1) {
                    if(hayMap[i, j - 1] != 0 &amp;&amp; hayMap[i + 1, j - 1] == 0) {
                        ind = 12;
                    } else if(hayMap[i, j - 1] == 0 &amp;&amp; hayMap[i + 1, j - 1] != 0) {
                        ind = 13;
                    }
                }
            }
            if(ind &lt; 3 &amp;&amp; ind != 1) {
                if(j &lt; array_length_2d(hayMap, i) - 1 &amp;&amp; i &lt; array_height_2d(hayMap) - 1) {
                    if(hayMap[i, j + 1] != 0 &amp;&amp; hayMap[i + 1, j + 1] == 0) {
                        ind = 14;
                    } else if(hayMap[i, j + 1] == 0 &amp;&amp; hayMap[i + 1, j + 1] != 0) {
                        ind = 15;
                    }
                }
            }
            draw_sprite(spr, ind, x + 32 + 32 * j, y + 32 + 32 * i);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>240,240</point>
  </PhysicsShapePoints>
</object>
