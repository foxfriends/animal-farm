<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>_menu</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
event_inherited();
curOpt = file_exists(working_directory + "\save");
opt[0] = "New Game";
opt[1] = "Continue";
opt[2] = "Exit";
randomize(); //Before first random action
quote = choose(
    "FOUR LEGS GOOD, TWO LEGS BAD",
    "ALL ANIMALS ARE EQUAL,#BUT SOME ANIMALS ARE MORE EQUAL THAN OTHERS",
    "I WILL WORK HARDER",
    "NAPOLEON IS ALWAYS RIGHT",
    "DEATH TO HUMANITY",
    "BEASTS OF ENGLAND, BEASTS OF IRELAND,#BEASTS OF EVERY LAND AND CLIME",
    "ANIMAL FARM, ANIMAL FARM,#NEVER THROUGH ME SHALT THOU COME TO HARM",
    "LONG LIVE COMRADE NAPOLEON",
    "WILL THERE STILL BE SUGAR AFTER THE REBELLION?",
    "DONKEYS LIVE A LONG TIME.#NONE OF YOU HAS EVER SEEN A DEAD DONKEY",
    "MANY OF US ACTUALLY DISLIKE MILK AND APPLES",
    "SURELY, COMRADES, YOU DO NOT WANT JONES BACK?"
    );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Activate options
if(menuDepth == instance_number(_menu)) {
    if(input_check_pressed(ACTION)) {
        switch(curOpt) {
        case 0: //New game
                room_goto(rFarm);
                break;
            case 1: //Continue
                if(file_exists(working_directory + "/save")) {
                    Controller.doLoad = true;
                    room_goto(rFarm);
                } else {
                    alert(window_get_width() / 2 - string_width("No save file exists") / 2, 16, "No save file exists");
                }
                break;
            default: //Exit
                game_end();
                break;
        }
        input_clear(ACTION);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cycle options (No close on cancel)
if(menuDepth == instance_number(_menu)) {
    if(input_check_pressed(UP)) {
        curOpt = (curOpt + array_length_1d(opt) - 1) % array_length_1d(opt);
    } else if(input_check_pressed(DOWN)) {
        curOpt = (curOpt + 1) % array_length_1d(opt);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the background and header text
draw_background(bgMenu, (window_get_width() - background_get_width(bgMenu)) / 2, 0);
draw_set_font(fMenu);
draw_set_color(make_color_rgb(51, 51, 51));
draw_set_halign(fa_center);
draw_text(window_get_width() / 2, 244, quote);
draw_set_halign(fa_right);
draw_set_color(make_color_rgb(255, 236, 181));
draw_text(window_get_width() - 16, 244, "Based on the novel by George Orwell");
draw_set_halign(fa_left);
draw_text(16, 244, "A game by Cameron Eldridge");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw menu
if(menuDepth == instance_number(_menu)) {
    draw_sprite(sMenuFrame, 0, window_get_width() / 2, window_get_height() / 2);
    draw_set_halign(fa_center);
    draw_set_font(fMenu);
    for(var i = 0; i &lt; array_length_1d(opt); i++) {
        if(i == curOpt) {
            draw_sprite(sMenuArrows, 0, window_get_width() / 2, window_get_height() / 2 - (array_length_1d(opt) / 2) * string_height("M") + i * string_height("M"));
        }
        draw_set_color(make_color_rgb(255, 236, 181));
        draw_text(  window_get_width() / 2,
                    window_get_height() / 2 - (array_length_1d(opt) / 2) * string_height("M") + i * string_height("M"),
                    opt[i]);
    }
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
